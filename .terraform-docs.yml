content: |-
  {{ .Header }}

  ## Example

  ### Confluent Operator

  ```hcl
  {{ include "examples/confluent_operator/main.tf" }}
  ```

  ### Confluent Platform

  ```hcl
  {{ include "examples/quickstart_deploy/confluent_platform/main.tf" }}
  ```

  ## Usage

  The Confluent for Kubernetes (CFK) Custom Resource Definitions (CRDs) must be released on the kubernetes cluster before the `terraform-confluent-for-kubernetes` module is run. The CFK CRDs can be released manually sing the `helm` commandline tool.

  ```
  helm repo add confluentinc https://packages.confluent.io/helm
  helm repo update
  ```

  ---

  Otherwise, the Confluent Operator and Confluent Platform can be deployed using Terraform. This deployment will require two separate Terraform workspace runs similiar to the [Deploy Applications with the Helm Provider](https://learn.hashicorp.com/tutorials/terraform/helm-provider?in=terraform/use-case) tutorial. For example:

  1. Apply the `confluent` namespace and release Confluent Operator into it:

  ```bash
  cd examples/confluent_operator
  terraform init
  terraform apply
  ```

  2. Apply the Confluent Platform:

  ```bash
  cd examples/quickstart_deploy/confluent_platform
  terraform init
  terraform apply
  ```

  ## Teardown

  1. Destroy the Confluent Platform:

  ```bash
  cd examples/quickstart_deploy/confluent_platform
  terraform destroy
  ```

  2. Uninstall the Confluent Operator and destroy `confluent` namespace:

  ```bash
  cd examples/confluent_operator
  terraform destroy
  ```


  ## Tests

  1. Install [Terraform](https://www.terraform.io/) and make sure it's on your `PATH`.
  2. Install [Golang](https://golang.org/) and make sure this code is checked out into your `GOPATH`.
  3. `go get github.com/gruntwork-io/terratest/modules/terraform
  4. `go mod init test/terraform_confluent_operator_test.go`
  5. `cd test`
  6. `go test terraform_confluent_operator_test.go -v`
  7. `go test terraform_confluent_platform_test.go -v`

  Or with the [Makefile](./Makefile)
  1. `make install`
  2. `make tests`

  ## Makefile Targets

  ```
  help                      This help.
  build                     Build docker dev container
  run                       Run docker dev container
  install                   Install project
  lint                      Lint with pre-commit
  lint-all                  Lint with pre-commit
  tests                     Test with Terratest
  test-confluent-operator   Test confluent-operator Example
  test-confluent-platform   Test confluent-platform Example
  clean                     Clean project
  ```
  {{ .Requirements }}
  {{ .Providers }}
  {{ .Modules }}
  {{ .Resources }}
  {{ .Inputs }}
  {{ .Outputs }}
