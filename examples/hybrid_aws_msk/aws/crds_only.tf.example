provider "kubectl" {
  host                   = data.aws_eks_cluster.eks.endpoint
  cluster_ca_certificate = base64decode(module.eks.cluster_certificate_authority_data)

  exec {
    api_version = "client.authentication.k8s.io/v1beta1"
    command     = "aws"
    # This requires the awscli to be installed locally where Terraform is executed
    args = ["eks", "get-token", "--cluster-name", module.eks.cluster_id]
  }
}

resource "kubectl_manifest" "crds" {
  for_each = toset([
    "platform.confluent.io_clusterlinks.yaml",
    "platform.confluent.io_confluentrolebindings.yaml",
    "platform.confluent.io_connectors.yaml",
    "platform.confluent.io_connects.yaml",
    "platform.confluent.io_controlcenters.yaml",
    "platform.confluent.io_kafkarestclasses.yaml",
    "platform.confluent.io_kafkarestproxies.yaml",
    "platform.confluent.io_kafkas.yaml",
    "platform.confluent.io_kafkatopics.yaml",
    "platform.confluent.io_ksqldbs.yaml",
    "platform.confluent.io_schemaexporters.yaml",
    "platform.confluent.io_schemaregistries.yaml",
    "platform.confluent.io_schemas.yaml",
    "platform.confluent.io_zookeepers.yaml"
  ])
  yaml_body = file("${path.module}/../../../crds/2.4.0/${each.key}")
}
