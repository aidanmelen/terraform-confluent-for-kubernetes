content: |-
  {{ .Header }}

  ## Example

  ### Confluent Operator

  ```hcl
  {{ include "examples/confluent_operator/main.tf" }}
  ```

  ### Confluent Platform

  ```hcl
  {{ include "examples/confluent_platform/main.tf" }}
  ```

  ## Usage

  Similiar to the [Deploy Applications with the Helm Provider](https://learn.hashicorp.com/tutorials/terraform/helm-provider?in=terraform/use-case) tutorial; releasing the Confluent Operator and Confluent Platform will require two separate Terraform runs. For example:

  ### Confluent Operator

  First, create the `confluent` namespace and release Confluent Operator into it:

  ```bash
  cd examples/confluent_operator
  terraform init
  terraform apply
  ```

  Please see the [Confluent for Kubernetes Quickstart](https://docs.confluent.io/operator/current/co-quickstart.html#co-long-quickstart) for more information releasing the Confluent Operator.

  ### Confluent Platform

  Second, apply the Confluent Platform:

  ```bash
  cd examples/confluent_platform
  terraform init
  terraform apply
  ```

  ## Teardown

  ### Confluent Platform

  First, destroy the Confluent Platform:

  ```bash
  cd examples/confluent_platform
  terraform destroy
  ```

  ### Confluent Operator

  Second, uninstall the Confluent Operator and delete `confluent` namespace:

  ```bash
  cd examples/confluent_operator
  terraform destroy
  ```

  ## Tests

  Run Terratest using the [Makefile](./Makefile) targets:

  1. `make install`
  2. `make tests`

  ## Makefile Targets

  ```
  help                      This help.
  build                     Build docker dev container
  run                       Run docker dev container
  install                   Install project
  lint                      Lint with pre-commit
  lint-all                  Lint with pre-commit
  tests                     Test with Terratest
  test-confluent-operator   Test confluent-operator Example
  test-confluent-platform   Test confluent-platform Example
  clean                     Clean project
  ```

  {{ .Requirements }}
  {{ .Providers }}
  {{ .Modules }}
  {{ .Resources }}
  {{ .Inputs }}
  {{ .Outputs }}
